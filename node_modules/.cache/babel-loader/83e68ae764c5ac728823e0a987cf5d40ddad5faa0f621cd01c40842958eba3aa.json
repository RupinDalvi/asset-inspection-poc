{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\VibeVibes\\\\IP\\\\apps\\\\inspection-app\\\\src\\\\components\\\\VibrationAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useContext } from 'react';\nimport { calculateMagnitude, classifyVibration } from '../services/vibration';\nimport { InspectionContext } from '../contexts/InspectionContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VibrationAnalysis() {\n  _s();\n  const canvasRef = useRef();\n  const [running, setRunning] = useState(false);\n  const {\n    setVibrationResult,\n    setRawVibrationData\n  } = useContext(InspectionContext);\n  const start = () => {\n    const data = [];\n    const ctx = canvasRef.current.getContext('2d');\n    const {\n      width,\n      height\n    } = canvasRef.current;\n    ctx.clearRect(0, 0, width, height);\n    let count = 0,\n      max = 100;\n    const handler = ev => {\n      const {\n        x,\n        y,\n        z\n      } = ev.accelerationIncludingGravity;\n      const mag = calculateMagnitude({\n        x,\n        y,\n        z\n      });\n      data.push({\n        x,\n        y,\n        z,\n        magnitude: mag,\n        timestamp: Date.now()\n      });\n      ctx.fillRect(count / max * width, height - mag / 20 * height, 2, 2);\n      if (++count >= max) {\n        window.removeEventListener('devicemotion', handler);\n        const res = classifyVibration(data);\n        setRawVibrationData(data);\n        setVibrationResult(res);\n        setRunning(false);\n      }\n    };\n    window.addEventListener('devicemotion', handler);\n    setRunning(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-medium mb-1\",\n      children: \"Vibration Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      disabled: running,\n      className: \"bg-indigo-500 text-white px-3 py-1 rounded mb-2\",\n      children: running ? 'Analyzing...' : 'Start Vibration Analysis'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 100,\n      className: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }, this);\n}\n_s(VibrationAnalysis, \"QtoVxOOMYj0pEb8orVlcFuGXb7k=\");\n_c = VibrationAnalysis;\nvar _c;\n$RefreshReg$(_c, \"VibrationAnalysis\");","map":{"version":3,"names":["React","useRef","useState","useContext","calculateMagnitude","classifyVibration","InspectionContext","jsxDEV","_jsxDEV","VibrationAnalysis","_s","canvasRef","running","setRunning","setVibrationResult","setRawVibrationData","start","data","ctx","current","getContext","width","height","clearRect","count","max","handler","ev","x","y","z","accelerationIncludingGravity","mag","push","magnitude","timestamp","Date","now","fillRect","window","removeEventListener","res","addEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","_c","$RefreshReg$"],"sources":["C:/Development/VibeVibes/IP/apps/inspection-app/src/components/VibrationAnalysis.js"],"sourcesContent":["import React, { useRef, useState, useContext } from 'react';\nimport { calculateMagnitude, classifyVibration } from '../services/vibration';\nimport { InspectionContext } from '../contexts/InspectionContext';\nexport default function VibrationAnalysis() {\n  const canvasRef = useRef();\n  const [running,setRunning]=useState(false);\n  const { setVibrationResult, setRawVibrationData } = useContext(InspectionContext);\n  const start = () => {\n    const data=[];\n    const ctx=canvasRef.current.getContext('2d');\n    const { width, height } = canvasRef.current;\n    ctx.clearRect(0,0,width,height);\n    let count=0, max=100;\n    const handler=ev=>{\n      const {x,y,z}=ev.accelerationIncludingGravity;\n      const mag=calculateMagnitude({x,y,z});\n      data.push({x,y,z,magnitude:mag,timestamp:Date.now()});\n      ctx.fillRect((count/max)*width, height-(mag/20)*height,2,2);\n      if(++count>=max){ window.removeEventListener('devicemotion',handler);\n        const res=classifyVibration(data);\n        setRawVibrationData(data);\n        setVibrationResult(res);\n        setRunning(false);\n      }};\n    window.addEventListener('devicemotion',handler);\n    setRunning(true);\n  };\n  return (<div className=\"mb-4\">\n    <h3 className=\"font-medium mb-1\">Vibration Analysis</h3>\n    <button onClick={start} disabled={running} className=\"bg-indigo-500 text-white px-3 py-1 rounded mb-2\">\n      {running?'Analyzing...':'Start Vibration Analysis'}\n    </button>\n    <canvas ref={canvasRef} width={300} height={100} className=\"border\" />\n  </div>);\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}