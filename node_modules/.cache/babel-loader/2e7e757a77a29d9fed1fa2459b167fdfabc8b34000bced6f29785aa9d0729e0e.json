{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import{BrowserRouter}from'react-router-dom';import App from'./App';import'./styles/index.css';import{AuthProvider}from'./contexts/AuthContext';import{InspectionProvider}from'./contexts/InspectionContext';import{jsx as _jsx}from\"react/jsx-runtime\";const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(InspectionProvider,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(App,{})})})})}));","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","App","AuthProvider","InspectionProvider","jsx","_jsx","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["C:/Development/VibeVibes/IP/apps/inspection-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './styles/index.css';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { InspectionProvider } from './contexts/InspectionContext';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <InspectionProvider>\n        <BrowserRouter><App/></BrowserRouter>\n      </InspectionProvider>\n    </AuthProvider>\n  </React.StrictMode>\n);\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,oBAAoB,CAC3B,OAASC,YAAY,KAAQ,wBAAwB,CACrD,OAASC,kBAAkB,KAAQ,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAClE,KAAM,CAAAC,IAAI,CAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTL,IAAA,CAACP,KAAK,CAACa,UAAU,EAAAC,QAAA,cACfP,IAAA,CAACH,YAAY,EAAAU,QAAA,cACXP,IAAA,CAACF,kBAAkB,EAAAS,QAAA,cACjBP,IAAA,CAACL,aAAa,EAAAY,QAAA,cAACP,IAAA,CAACJ,GAAG,GAAC,CAAC,CAAe,CAAC,CACnB,CAAC,CACT,CAAC,CACC,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}