{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDNtGIxGYjRWvpOJPfmIcN4An3w_aAYkY4\",\n  authDomain: \"vibe-vibes.firebaseapp.com\",\n  projectId: \"vibe-vibes\",\n  storageBucket: \"vibe-vibes.firebasestorage.app\",\n  messagingSenderId: \"542860983738\",\n  appId: \"1:542860983738:web:6aa77981e3dbe089b93183\"\n};\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const firestore = getFirestore(app);\nexport const storage = getStorage(app);\nexport function initAuth(onUser) {\n  signInAnonymously(auth).catch(console.error);\n  onAuthStateChanged(auth, user => {\n    if (user) onUser(user);\n  });\n}\nexport async function uploadMedia(rootPath, mediaArray) {\n  const urls = [];\n  for (const item of mediaArray) {\n    const fileRef = ref(storage, `${rootPath}/${item.timestamp}`);\n    await uploadBytes(fileRef, item.blob);\n    urls.push(await getDownloadURL(fileRef));\n  }\n  return urls;\n}","map":{"version":3,"names":["initializeApp","getAuth","signInAnonymously","onAuthStateChanged","getFirestore","getStorage","ref","uploadBytes","getDownloadURL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","firestore","storage","initAuth","onUser","catch","console","error","user","uploadMedia","rootPath","mediaArray","urls","item","fileRef","timestamp","blob","push"],"sources":["C:/Development/VibeVibes/IP/apps/inspection-app/src/services/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDNtGIxGYjRWvpOJPfmIcN4An3w_aAYkY4\",\n  authDomain: \"vibe-vibes.firebaseapp.com\",\n  projectId: \"vibe-vibes\",\n  storageBucket: \"vibe-vibes.firebasestorage.app\",\n  messagingSenderId: \"542860983738\",\n  appId: \"1:542860983738:web:6aa77981e3dbe089b93183\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const firestore = getFirestore(app);\nexport const storage = getStorage(app);\n\nexport function initAuth(onUser) {\n  signInAnonymously(auth).catch(console.error);\n  onAuthStateChanged(auth, user => { if (user) onUser(user); });\n}\n\nexport async function uploadMedia(rootPath, mediaArray) {\n  const urls = [];\n  for (const item of mediaArray) {\n    const fileRef = ref(storage, `${rootPath}/${item.timestamp}`);\n    await uploadBytes(fileRef, item.blob);\n    urls.push(await getDownloadURL(fileRef));\n  }\n  return urls;\n}\n\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,eAAe;AAC9E,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,UAAU,EAAEC,GAAG,EAAEC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;;AAE/E;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,gCAAgC;EAC/CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,GAAG,GAAGhB,aAAa,CAACS,cAAc,CAAC;AACzC,OAAO,MAAMQ,IAAI,GAAGhB,OAAO,CAACe,GAAG,CAAC;AAChC,OAAO,MAAME,SAAS,GAAGd,YAAY,CAACY,GAAG,CAAC;AAC1C,OAAO,MAAMG,OAAO,GAAGd,UAAU,CAACW,GAAG,CAAC;AAEtC,OAAO,SAASI,QAAQA,CAACC,MAAM,EAAE;EAC/BnB,iBAAiB,CAACe,IAAI,CAAC,CAACK,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EAC5CrB,kBAAkB,CAACc,IAAI,EAAEQ,IAAI,IAAI;IAAE,IAAIA,IAAI,EAAEJ,MAAM,CAACI,IAAI,CAAC;EAAE,CAAC,CAAC;AAC/D;AAEA,OAAO,eAAeC,WAAWA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EACtD,MAAMC,IAAI,GAAG,EAAE;EACf,KAAK,MAAMC,IAAI,IAAIF,UAAU,EAAE;IAC7B,MAAMG,OAAO,GAAGzB,GAAG,CAACa,OAAO,EAAE,GAAGQ,QAAQ,IAAIG,IAAI,CAACE,SAAS,EAAE,CAAC;IAC7D,MAAMzB,WAAW,CAACwB,OAAO,EAAED,IAAI,CAACG,IAAI,CAAC;IACrCJ,IAAI,CAACK,IAAI,CAAC,MAAM1B,cAAc,CAACuB,OAAO,CAAC,CAAC;EAC1C;EACA,OAAOF,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}