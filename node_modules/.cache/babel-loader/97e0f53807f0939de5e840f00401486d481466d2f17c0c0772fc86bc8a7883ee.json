{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\VibeVibes\\\\IP\\\\apps\\\\inspection-app\\\\src\\\\components\\\\SubmitReport.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { auth, firestore } from '../services/firebase';\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport { InspectionContext } from '../contexts/InspectionContext';\nimport { convertBlobToDataURLArray } from '../utils/blobUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubmitReport() {\n  _s();\n  const {\n    assetId,\n    photos,\n    videos,\n    defects,\n    vibrationResult,\n    rawVibrationData,\n    setAssetId,\n    setPhotos,\n    setVideos,\n    setDefects,\n    setVibrationResult,\n    setRawVibrationData\n  } = useContext(InspectionContext);\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState('');\n  const submit = async () => {\n    setLoading(true);\n    setMsg('');\n    try {\n      const user = auth.currentUser;\n      if (!user) throw new Error('User not authenticated');\n      const uid = user.uid;\n\n      // Convert media blobs to base64 DataURLs\n      const photoData = await convertBlobToDataURLArray(photos);\n      const videoData = await convertBlobToDataURLArray(videos);\n\n      // Normalize defect objects and vibration data already plain\n      // Prepare geolocation entries (assumes each photo/video has `location` field)\n      const locations = photos.map(p => ({\n        latitude: p.location.latitude,\n        longitude: p.location.longitude,\n        accuracy: p.location.accuracy,\n        timestamp: p.location.timestamp\n      }));\n      const report = {\n        assetId,\n        userId: uid,\n        timestamp: serverTimestamp(),\n        defects,\n        photoData,\n        videoData,\n        locations,\n        vibrationResult,\n        rawVibrationData\n      };\n      await addDoc(collection(firestore, `artifacts/demo/users/${uid}/inspection_reports`), report);\n      setMsg('Report submitted successfully');\n      // Clear inspection context\n      setAssetId('');\n      setPhotos([]);\n      setVideos([]);\n      setDefects([]);\n      setVibrationResult(null);\n      setRawVibrationData([]);\n    } catch (e) {\n      console.error('SubmitReport error:', e);\n      setMsg(`Submission failed: ${e.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-center\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      disabled: loading,\n      className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\",\n      children: loading ? 'Submitting...' : 'Submit Inspection Report'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(SubmitReport, \"6IjyR9aSw0+3JqgYlV3UhFSOR/s=\");\n_c = SubmitReport;\nvar _c;\n$RefreshReg$(_c, \"SubmitReport\");","map":{"version":3,"names":["React","useContext","useState","auth","firestore","addDoc","collection","serverTimestamp","InspectionContext","convertBlobToDataURLArray","jsxDEV","_jsxDEV","SubmitReport","_s","assetId","photos","videos","defects","vibrationResult","rawVibrationData","setAssetId","setPhotos","setVideos","setDefects","setVibrationResult","setRawVibrationData","loading","setLoading","msg","setMsg","submit","user","currentUser","Error","uid","photoData","videoData","locations","map","p","latitude","location","longitude","accuracy","timestamp","report","userId","e","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Development/VibeVibes/IP/apps/inspection-app/src/components/SubmitReport.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { auth, firestore } from '../services/firebase';\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport { InspectionContext } from '../contexts/InspectionContext';\nimport { convertBlobToDataURLArray } from '../utils/blobUtils';\n\nexport default function SubmitReport() {\n  const {\n    assetId,\n    photos,\n    videos,\n    defects,\n    vibrationResult,\n    rawVibrationData,\n    setAssetId,\n    setPhotos,\n    setVideos,\n    setDefects,\n    setVibrationResult,\n    setRawVibrationData\n  } = useContext(InspectionContext);\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  const submit = async () => {\n    setLoading(true);\n    setMsg('');\n    try {\n      const user = auth.currentUser;\n      if (!user) throw new Error('User not authenticated');\n      const uid = user.uid;\n\n      // Convert media blobs to base64 DataURLs\n      const photoData = await convertBlobToDataURLArray(photos);\n      const videoData = await convertBlobToDataURLArray(videos);\n\n      // Normalize defect objects and vibration data already plain\n      // Prepare geolocation entries (assumes each photo/video has `location` field)\n      const locations = photos.map(p => ({\n        latitude: p.location.latitude,\n        longitude: p.location.longitude,\n        accuracy: p.location.accuracy,\n        timestamp: p.location.timestamp\n      }));\n\n      const report = {\n        assetId,\n        userId: uid,\n        timestamp: serverTimestamp(),\n        defects,\n        photoData,\n        videoData,\n        locations,\n        vibrationResult,\n        rawVibrationData\n      };\n\n      await addDoc(\n        collection(\n          firestore,\n          `artifacts/demo/users/${uid}/inspection_reports`\n        ),\n        report\n      );\n\n      setMsg('Report submitted successfully');\n      // Clear inspection context\n      setAssetId('');\n      setPhotos([]);\n      setVideos([]);\n      setDefects([]);\n      setVibrationResult(null);\n      setRawVibrationData([]);\n    } catch (e) {\n      console.error('SubmitReport error:', e);\n      setMsg(`Submission failed: ${e.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      {msg && <div className=\"mb-4 text-center\">{msg}</div>}\n      <button\n        onClick={submit}\n        disabled={loading}\n        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\n      >\n        {loading ? 'Submitting...' : 'Submit Inspection Report'}\n      </button>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}