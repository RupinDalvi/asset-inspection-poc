{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\VibeVibes\\\\IP\\\\apps\\\\inspection-app\\\\src\\\\components\\\\SubmitReport.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { auth, firestore } from '../services/firebase';\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport { InspectionContext } from '../contexts/InspectionContext';\nimport { convertBlobToDataURLArray } from '../utils/blobUtils';\nimport { blobToDataURL } from '../utils/blobUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function prepareMediaData(mediaItems) {\n  // mediaItems is an array of { blob, location, timestamp }\n  return Promise.all(mediaItems.map(async item => {\n    const dataURL = await blobToDataURL(item.blob);\n    return {\n      // keep the metadata\n      location: item.location,\n      timestamp: item.timestamp,\n      // attach the actual image/video as a base64 string\n      dataURL\n    };\n  }));\n}\nconst submit = async () => {\n  setLoading(true);\n  try {\n    const uid = auth.currentUser.uid;\n    const ts = Date.now();\n\n    // Convert photos/videos properly\n    const photoData = await prepareMediaData(photos);\n    const videoData = await prepareMediaData(videos);\n\n    // Write to Firestore\n    await addDoc(collection(firestore, `artifacts/demo/users/${uid}/inspection_reports`), {\n      assetId,\n      userId: uid,\n      timestamp: serverTimestamp(),\n      defects,\n      // now these are arrays of {location, timestamp, dataURL}\n      photoData,\n      videoData,\n      vibrationResult,\n      rawVibrationData: JSON.stringify(rawVibrationData)\n    });\n    setMsg(\"Report submitted successfully\");\n  } catch (e) {\n    console.error(\"SubmitReport error:\", e);\n    setMsg(`Submission failed: ${e.message}`);\n  } finally {\n    setLoading(false);\n  }\n};\nexport default function SubmitReport() {\n  _s();\n  const {\n    assetId,\n    photos,\n    videos,\n    defects,\n    vibrationResult,\n    rawVibrationData,\n    setAssetId,\n    setPhotos,\n    setVideos,\n    setDefects,\n    setVibrationResult,\n    setRawVibrationData\n  } = useContext(InspectionContext);\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState('');\n  const submit = async () => {\n    setLoading(true);\n    setMsg('');\n    try {\n      const user = auth.currentUser;\n      if (!user) throw new Error('User not authenticated');\n      const uid = user.uid;\n\n      // Convert media blobs to base64 DataURLs\n      const photoData = await convertBlobToDataURLArray(photos);\n      const videoData = await convertBlobToDataURLArray(videos);\n\n      // Normalize defect objects and vibration data already plain\n      // Prepare geolocation entries (assumes each photo/video has `location` field)\n      const locations = photos.map(p => ({\n        latitude: p.location.latitude,\n        longitude: p.location.longitude,\n        accuracy: p.location.accuracy,\n        timestamp: p.location.timestamp\n      }));\n      const report = {\n        assetId,\n        userId: uid,\n        timestamp: serverTimestamp(),\n        defects,\n        photoData,\n        videoData,\n        locations,\n        vibrationResult,\n        rawVibrationData\n      };\n      await addDoc(collection(firestore, `artifacts/demo/users/${uid}/inspection_reports`), report);\n      setMsg('Report submitted successfully');\n      // Clear inspection context\n      setAssetId('');\n      setPhotos([]);\n      setVideos([]);\n      setDefects([]);\n      setVibrationResult(null);\n      setRawVibrationData([]);\n    } catch (e) {\n      console.error('SubmitReport error:', e);\n      setMsg(`Submission failed: ${e.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-center\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      disabled: loading,\n      className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\",\n      children: loading ? 'Submitting...' : 'Submit Inspection Report'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(SubmitReport, \"6IjyR9aSw0+3JqgYlV3UhFSOR/s=\");\n_c = SubmitReport;\nvar _c;\n$RefreshReg$(_c, \"SubmitReport\");","map":{"version":3,"names":["React","useContext","useState","auth","firestore","addDoc","collection","serverTimestamp","InspectionContext","convertBlobToDataURLArray","blobToDataURL","jsxDEV","_jsxDEV","prepareMediaData","mediaItems","Promise","all","map","item","dataURL","blob","location","timestamp","submit","setLoading","uid","currentUser","ts","Date","now","photoData","photos","videoData","videos","assetId","userId","defects","vibrationResult","rawVibrationData","JSON","stringify","setMsg","e","console","error","message","SubmitReport","_s","setAssetId","setPhotos","setVideos","setDefects","setVibrationResult","setRawVibrationData","loading","msg","user","Error","locations","p","latitude","longitude","accuracy","report","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Development/VibeVibes/IP/apps/inspection-app/src/components/SubmitReport.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { auth, firestore } from '../services/firebase';\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport { InspectionContext } from '../contexts/InspectionContext';\nimport { convertBlobToDataURLArray } from '../utils/blobUtils';\nimport { blobToDataURL } from '../utils/blobUtils';\n\n\nasync function prepareMediaData(mediaItems) {\n  // mediaItems is an array of { blob, location, timestamp }\n  return Promise.all(mediaItems.map(async item => {\n    const dataURL = await blobToDataURL(item.blob);\n    return {\n      // keep the metadata\n      location: item.location,\n      timestamp: item.timestamp,\n      // attach the actual image/video as a base64 string\n      dataURL\n    };\n  }));\n}\n\nconst submit = async () => {\n  setLoading(true);\n  try {\n    const uid = auth.currentUser.uid;\n    const ts = Date.now();\n\n    // Convert photos/videos properly\n    const photoData  = await prepareMediaData(photos);\n    const videoData  = await prepareMediaData(videos);\n\n    // Write to Firestore\n    await addDoc(\n      collection(firestore, `artifacts/demo/users/${uid}/inspection_reports`),\n      {\n        assetId,\n        userId: uid,\n        timestamp: serverTimestamp(),\n        defects,\n        // now these are arrays of {location, timestamp, dataURL}\n        photoData,\n        videoData,\n        vibrationResult,\n        rawVibrationData: JSON.stringify(rawVibrationData),\n      }\n    );\n\n    setMsg(\"Report submitted successfully\");\n  } catch (e) {\n    console.error(\"SubmitReport error:\", e);\n    setMsg(`Submission failed: ${e.message}`);\n  } finally {\n    setLoading(false);\n  }\n};\n\nexport default function SubmitReport() {\n  const {\n    assetId,\n    photos,\n    videos,\n    defects,\n    vibrationResult,\n    rawVibrationData,\n    setAssetId,\n    setPhotos,\n    setVideos,\n    setDefects,\n    setVibrationResult,\n    setRawVibrationData\n  } = useContext(InspectionContext);\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  const submit = async () => {\n    setLoading(true);\n    setMsg('');\n    try {\n      const user = auth.currentUser;\n      if (!user) throw new Error('User not authenticated');\n      const uid = user.uid;\n\n      // Convert media blobs to base64 DataURLs\n      const photoData = await convertBlobToDataURLArray(photos);\n      const videoData = await convertBlobToDataURLArray(videos);\n\n      // Normalize defect objects and vibration data already plain\n      // Prepare geolocation entries (assumes each photo/video has `location` field)\n      const locations = photos.map(p => ({\n        latitude: p.location.latitude,\n        longitude: p.location.longitude,\n        accuracy: p.location.accuracy,\n        timestamp: p.location.timestamp\n      }));\n\n      const report = {\n        assetId,\n        userId: uid,\n        timestamp: serverTimestamp(),\n        defects,\n        photoData,\n        videoData,\n        locations,\n        vibrationResult,\n        rawVibrationData\n      };\n\n      await addDoc(\n        collection(\n          firestore,\n          `artifacts/demo/users/${uid}/inspection_reports`\n        ),\n        report\n      );\n\n      setMsg('Report submitted successfully');\n      // Clear inspection context\n      setAssetId('');\n      setPhotos([]);\n      setVideos([]);\n      setDefects([]);\n      setVibrationResult(null);\n      setRawVibrationData([]);\n    } catch (e) {\n      console.error('SubmitReport error:', e);\n      setMsg(`Submission failed: ${e.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      {msg && <div className=\"mb-4 text-center\">{msg}</div>}\n      <button\n        onClick={submit}\n        disabled={loading}\n        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\n      >\n        {loading ? 'Submitting...' : 'Submit Inspection Report'}\n      </button>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}